# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import gRPC_servant_pb2 as gRPC__servant__pb2


class gRPC_servantStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.read_csv = channel.unary_unary(
                '/gRPC_servant/read_csv',
                request_serializer=gRPC__servant__pb2.Request.SerializeToString,
                response_deserializer=gRPC__servant__pb2.Result.FromString,
                )
        self.min = channel.unary_unary(
                '/gRPC_servant/min',
                request_serializer=gRPC__servant__pb2.Request.SerializeToString,
                response_deserializer=gRPC__servant__pb2.Result.FromString,
                )
        self.max = channel.unary_unary(
                '/gRPC_servant/max',
                request_serializer=gRPC__servant__pb2.Request.SerializeToString,
                response_deserializer=gRPC__servant__pb2.Result.FromString,
                )


class gRPC_servantServicer(object):
    """Missing associated documentation comment in .proto file."""

    def read_csv(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def min(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def max(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_gRPC_servantServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'read_csv': grpc.unary_unary_rpc_method_handler(
                    servicer.read_csv,
                    request_deserializer=gRPC__servant__pb2.Request.FromString,
                    response_serializer=gRPC__servant__pb2.Result.SerializeToString,
            ),
            'min': grpc.unary_unary_rpc_method_handler(
                    servicer.min,
                    request_deserializer=gRPC__servant__pb2.Request.FromString,
                    response_serializer=gRPC__servant__pb2.Result.SerializeToString,
            ),
            'max': grpc.unary_unary_rpc_method_handler(
                    servicer.max,
                    request_deserializer=gRPC__servant__pb2.Request.FromString,
                    response_serializer=gRPC__servant__pb2.Result.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'gRPC_servant', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class gRPC_servant(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def read_csv(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gRPC_servant/read_csv',
            gRPC__servant__pb2.Request.SerializeToString,
            gRPC__servant__pb2.Result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def min(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gRPC_servant/min',
            gRPC__servant__pb2.Request.SerializeToString,
            gRPC__servant__pb2.Result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def max(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gRPC_servant/max',
            gRPC__servant__pb2.Request.SerializeToString,
            gRPC__servant__pb2.Result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
